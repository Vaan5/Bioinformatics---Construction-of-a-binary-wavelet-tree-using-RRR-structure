#include "stdafx.h"
#include <string>
#include "CppUnitTest.h"
#include <cstdint>
#include "../WaveletTree/WaveletTree.h"
#include "../WaveletTree/WaveletNode.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;
using namespace std;

namespace UnitTests
{
	TEST_CLASS(UnitTestWaveletTreeHIVRank)
	{
	public:
		
		TEST_METHOD(WaveletTreeHIVRank)
		{
			string input = "ACTCTTTGGCAACGACCCCTCGTCACAATAAAGATAGGGGGGCAACTAAAGGAAGCTCTATTAGATACAGGAGCAGATGATACAGTATTAGAAGAAATGAGTTTGCCAGGAAGATGGAAACCAAAAATGATAGGGGGAATTGGAGGTTTTATCAAAGTAAGACAGTATGATCAGATACTCATAGAAATCTGTGGACATAAAGCTATAGGTACAGTATTAGTAGGACCTACACCTGTCAACATAATTGGAAGAAATCTGTTGACTCAGATTGGTTGCACTTTAAATTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNATGGAAAAGGAAGGGAAAATTTCAAAAATTGGGCCTGAAAATCCATACAATACTCCAGTATTTGCCATAAAGAAAAAAGACAGTACTAAATGGAGAAAATTAGTAGATTTCAGAGAACTTAATAAGAGAACTCAAGACTTCTGGGAAGTTCAATTAGGAATACCACATCCCGCAGGGTTAAAAAAGAAAAAATCAGTAACAGTACTGGATGTGGGTGATGCATATTTTTCAGTTCCCTTAGATGAAGACTTCAGGAAGTATACTGCATTTACCATACCTAGTATAAACAATGAGACACCAGGGATTAGATATCAGTACAATGTGCTTCCACAGGGATGGAAAGGATCACCAGCAATATTCCAAAGTAGCATGACAAAAATCTTAGAGCCTTTTAGAAAACAAAATCCAGACATAGTTATCTATCAATACATGGATGATTTGTATGTAGGATCTGACTTAGAAATAGGGCAGCATAGAACAAAAATAGAGGAGCTGAGACAACATCTGTTGAGGTGGGGACTTACCACACCAGACAAAAAACATCAGAAAGAACCTCCATTCCTTTGGATGGGTTATGAACTCCATCCTGATAAATGGACA";
			WaveletTree tree(input);
			Assert::AreEqual((uint64_t)1, tree.rank('A', 0), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('A', 1), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('A', 2), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('A', 3), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('A', 4), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('A', 5), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('A', 6), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('A', 7), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('A', 8), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('A', 9), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)2, tree.rank('A', 10), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)3, tree.rank('A', 11), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)3, tree.rank('A', 12), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)3, tree.rank('A', 13), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 14), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 15), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 16), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 17), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 18), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 19), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 20), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 21), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 22), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('A', 23), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)5, tree.rank('A', 24), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)5, tree.rank('A', 25), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)6, tree.rank('A', 26), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)7, tree.rank('A', 27), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)7, tree.rank('A', 28), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('A', 29), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('A', 30), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)10, tree.rank('A', 31), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)10, tree.rank('A', 32), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)11, tree.rank('A', 33), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)11, tree.rank('A', 34), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)12, tree.rank('A', 35), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)12, tree.rank('A', 36), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)12, tree.rank('A', 37), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)12, tree.rank('A', 38), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)12, tree.rank('A', 39), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)12, tree.rank('A', 40), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)12, tree.rank('A', 41), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)12, tree.rank('A', 42), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)13, tree.rank('A', 43), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('A', 44), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('A', 45), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('A', 46), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)15, tree.rank('A', 47), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)16, tree.rank('A', 48), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)17, tree.rank('A', 49), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)17, tree.rank('A', 50), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)17, tree.rank('A', 51), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)18, tree.rank('A', 52), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('A', 53), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('A', 54), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('A', 55), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('A', 56), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('A', 57), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('A', 58), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)20, tree.rank('A', 59), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)20, tree.rank('A', 60), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)20, tree.rank('A', 61), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)21, tree.rank('A', 62), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)21, tree.rank('A', 63), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)22, tree.rank('A', 64), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)22, tree.rank('A', 65), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('A', 66), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('A', 67), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('A', 68), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('A', 69), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('A', 70), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)25, tree.rank('A', 71), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)25, tree.rank('A', 72), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)25, tree.rank('A', 73), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('A', 74), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('A', 75), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)27, tree.rank('A', 76), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)27, tree.rank('A', 77), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)27, tree.rank('A', 78), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)28, tree.rank('A', 79), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)28, tree.rank('A', 80), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)29, tree.rank('A', 81), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)29, tree.rank('A', 82), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)30, tree.rank('A', 83), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)30, tree.rank('A', 84), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)30, tree.rank('A', 85), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)31, tree.rank('A', 86), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)31, tree.rank('A', 87), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)31, tree.rank('A', 88), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)32, tree.rank('A', 89), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)32, tree.rank('A', 90), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)33, tree.rank('A', 91), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('A', 92), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('A', 93), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)35, tree.rank('A', 94), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)36, tree.rank('A', 95), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)37, tree.rank('A', 96), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)37, tree.rank('A', 97), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)37, tree.rank('A', 98), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('A', 99), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('A', 100), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('A', 101), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('A', 102), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('A', 103), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('A', 104), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('A', 105), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('A', 106), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)39, tree.rank('A', 107), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)39, tree.rank('A', 108), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)39, tree.rank('A', 109), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)40, tree.rank('A', 110), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)41, tree.rank('A', 111), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)41, tree.rank('A', 112), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)42, tree.rank('A', 113), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)42, tree.rank('A', 114), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)42, tree.rank('A', 115), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)42, tree.rank('A', 116), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)43, tree.rank('A', 117), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)44, tree.rank('A', 118), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)45, tree.rank('A', 119), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)45, tree.rank('A', 120), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)45, tree.rank('A', 121), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)46, tree.rank('A', 122), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)47, tree.rank('A', 123), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)48, tree.rank('A', 124), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)49, tree.rank('A', 125), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)50, tree.rank('A', 126), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)50, tree.rank('A', 127), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)50, tree.rank('A', 128), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)51, tree.rank('A', 129), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)51, tree.rank('A', 130), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('A', 131), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('A', 132), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('A', 133), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('A', 134), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('A', 135), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('A', 136), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)53, tree.rank('A', 137), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('A', 138), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('A', 139), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('A', 140), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('A', 141), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('A', 142), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('A', 143), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('A', 144), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('A', 145), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('A', 146), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('A', 147), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('A', 148), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('A', 149), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)56, tree.rank('A', 150), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)56, tree.rank('A', 151), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)56, tree.rank('A', 152), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('A', 153), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)58, tree.rank('A', 154), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)59, tree.rank('A', 155), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)59, tree.rank('A', 156), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)59, tree.rank('A', 157), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)60, tree.rank('A', 158), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)61, tree.rank('A', 159), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)61, tree.rank('A', 160), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)62, tree.rank('A', 161), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)62, tree.rank('A', 162), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)63, tree.rank('A', 163), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)63, tree.rank('A', 164), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)63, tree.rank('A', 165), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)64, tree.rank('A', 166), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)64, tree.rank('A', 167), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)64, tree.rank('A', 168), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)65, tree.rank('A', 169), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)65, tree.rank('A', 170), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)65, tree.rank('A', 171), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)66, tree.rank('A', 172), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)66, tree.rank('A', 173), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)67, tree.rank('A', 174), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)67, tree.rank('A', 175), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)68, tree.rank('A', 176), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)68, tree.rank('A', 177), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)68, tree.rank('A', 178), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)68, tree.rank('A', 179), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)69, tree.rank('A', 180), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)69, tree.rank('A', 181), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)70, tree.rank('A', 182), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)70, tree.rank('A', 183), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)71, tree.rank('A', 184), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)72, tree.rank('A', 185), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('A', 186), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('A', 187), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('A', 188), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('A', 189), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('A', 190), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('A', 191), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('A', 192), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('A', 193), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('A', 194), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('A', 195), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)75, tree.rank('A', 196), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)75, tree.rank('A', 197), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)76, tree.rank('A', 198), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)77, tree.rank('A', 199), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)78, tree.rank('A', 200), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)78, tree.rank('A', 201), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)78, tree.rank('A', 202), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)78, tree.rank('A', 203), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)79, tree.rank('A', 204), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)79, tree.rank('A', 205), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('A', 206), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('A', 207), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('A', 208), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('A', 209), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)81, tree.rank('A', 210), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)81, tree.rank('A', 211), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)82, tree.rank('A', 212), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)82, tree.rank('A', 213), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)82, tree.rank('A', 214), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)83, tree.rank('A', 215), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)83, tree.rank('A', 216), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)83, tree.rank('A', 217), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)84, tree.rank('A', 218), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)84, tree.rank('A', 219), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)84, tree.rank('A', 220), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)85, tree.rank('A', 221), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)85, tree.rank('A', 222), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)85, tree.rank('A', 223), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)86, tree.rank('A', 224), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)86, tree.rank('A', 225), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)86, tree.rank('A', 226), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)86, tree.rank('A', 227), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)87, tree.rank('A', 228), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)87, tree.rank('A', 229), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('A', 230), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('A', 231), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('A', 232), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('A', 233), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('A', 234), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('A', 235), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('A', 236), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('A', 237), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)90, tree.rank('A', 238), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)90, tree.rank('A', 239), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)91, tree.rank('A', 240), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)91, tree.rank('A', 241), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('A', 242), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)93, tree.rank('A', 243), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)93, tree.rank('A', 244), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)93, tree.rank('A', 245), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)93, tree.rank('A', 246), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)93, tree.rank('A', 247), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)94, tree.rank('A', 248), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)95, tree.rank('A', 249), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)95, tree.rank('A', 250), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)96, tree.rank('A', 251), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)97, tree.rank('A', 252), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('A', 253), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('A', 254), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('A', 255), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('A', 256), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('A', 257), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('A', 258), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('A', 259), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('A', 260), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)99, tree.rank('A', 261), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)99, tree.rank('A', 262), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)99, tree.rank('A', 263), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)99, tree.rank('A', 264), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)100, tree.rank('A', 265), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)100, tree.rank('A', 266), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('A', 267), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('A', 268), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('A', 269), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('A', 270), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('A', 271), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('A', 272), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('A', 273), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('A', 274), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('A', 275), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('A', 276), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('A', 277), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('A', 278), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('A', 279), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('A', 280), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)103, tree.rank('A', 281), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)104, tree.rank('A', 282), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 283), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 284), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 285), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 286), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 287), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 288), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 289), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 290), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 291), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 292), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 293), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 294), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 295), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 296), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 297), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 298), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 299), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 300), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 301), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 302), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 303), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 304), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 305), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 306), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 307), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 308), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 309), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 310), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 311), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 312), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 313), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 314), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 315), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 316), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 317), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 318), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 319), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 320), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 321), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 322), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 323), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 324), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 325), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 326), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 327), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 328), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 329), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 330), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 331), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 332), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 333), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 334), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 335), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 336), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 337), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 338), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 339), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 340), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 341), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 342), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 343), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 344), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 345), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 346), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 347), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 348), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 349), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 350), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 351), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 352), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 353), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 354), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 355), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 356), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 357), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 358), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 359), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 360), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 361), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 362), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 363), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 364), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 365), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 366), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 367), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 368), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 369), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 370), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 371), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 372), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 373), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 374), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 375), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 376), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 377), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 378), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 379), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 380), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 381), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 382), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 383), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 384), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 385), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 386), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 387), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 388), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 389), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 390), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 391), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 392), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 393), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 394), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 395), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 396), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 397), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('A', 398), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)106, tree.rank('A', 399), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)106, tree.rank('A', 400), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)106, tree.rank('A', 401), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)106, tree.rank('A', 402), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)107, tree.rank('A', 403), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)108, tree.rank('A', 404), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)109, tree.rank('A', 405), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('A', 406), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('A', 407), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('A', 408), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('A', 409), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)112, tree.rank('A', 410), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)112, tree.rank('A', 411), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)112, tree.rank('A', 412), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)112, tree.rank('A', 413), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('A', 414), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)114, tree.rank('A', 415), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)115, tree.rank('A', 416), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)116, tree.rank('A', 417), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)116, tree.rank('A', 418), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)116, tree.rank('A', 419), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)116, tree.rank('A', 420), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)116, tree.rank('A', 421), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)117, tree.rank('A', 422), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)118, tree.rank('A', 423), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)119, tree.rank('A', 424), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)120, tree.rank('A', 425), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 426), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 427), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 428), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 429), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 430), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 431), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 432), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 433), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 434), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('A', 435), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)122, tree.rank('A', 436), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)123, tree.rank('A', 437), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)124, tree.rank('A', 438), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)125, tree.rank('A', 439), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)125, tree.rank('A', 440), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)125, tree.rank('A', 441), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)125, tree.rank('A', 442), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)126, tree.rank('A', 443), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)126, tree.rank('A', 444), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)127, tree.rank('A', 445), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)127, tree.rank('A', 446), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)128, tree.rank('A', 447), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)129, tree.rank('A', 448), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)129, tree.rank('A', 449), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)130, tree.rank('A', 450), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)130, tree.rank('A', 451), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)130, tree.rank('A', 452), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)130, tree.rank('A', 453), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)130, tree.rank('A', 454), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)131, tree.rank('A', 455), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)131, tree.rank('A', 456), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)131, tree.rank('A', 457), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('A', 458), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('A', 459), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('A', 460), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('A', 461), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('A', 462), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('A', 463), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('A', 464), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)133, tree.rank('A', 465), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)133, tree.rank('A', 466), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)134, tree.rank('A', 467), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)135, tree.rank('A', 468), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)136, tree.rank('A', 469), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)136, tree.rank('A', 470), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)137, tree.rank('A', 471), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)138, tree.rank('A', 472), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)139, tree.rank('A', 473), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)140, tree.rank('A', 474), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)141, tree.rank('A', 475), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)142, tree.rank('A', 476), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)142, tree.rank('A', 477), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)143, tree.rank('A', 478), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)143, tree.rank('A', 479), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('A', 480), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('A', 481), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('A', 482), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('A', 483), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('A', 484), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('A', 485), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)146, tree.rank('A', 486), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)147, tree.rank('A', 487), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)148, tree.rank('A', 488), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)148, tree.rank('A', 489), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)148, tree.rank('A', 490), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)148, tree.rank('A', 491), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)149, tree.rank('A', 492), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)149, tree.rank('A', 493), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)150, tree.rank('A', 494), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)151, tree.rank('A', 495), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)152, tree.rank('A', 496), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)153, tree.rank('A', 497), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)153, tree.rank('A', 498), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)153, tree.rank('A', 499), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('A', 500), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('A', 501), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('A', 502), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('A', 503), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('A', 504), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('A', 505), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('A', 506), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('A', 507), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('A', 508), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('A', 509), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)157, tree.rank('A', 510), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)157, tree.rank('A', 511), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)158, tree.rank('A', 512), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)158, tree.rank('A', 513), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)159, tree.rank('A', 514), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)160, tree.rank('A', 515), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)160, tree.rank('A', 516), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)160, tree.rank('A', 517), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)160, tree.rank('A', 518), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('A', 519), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)162, tree.rank('A', 520), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)162, tree.rank('A', 521), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)163, tree.rank('A', 522), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)164, tree.rank('A', 523), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)164, tree.rank('A', 524), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)165, tree.rank('A', 525), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)165, tree.rank('A', 526), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)166, tree.rank('A', 527), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)167, tree.rank('A', 528), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)167, tree.rank('A', 529), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)167, tree.rank('A', 530), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)167, tree.rank('A', 531), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('A', 532), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('A', 533), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('A', 534), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('A', 535), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('A', 536), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('A', 537), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('A', 538), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('A', 539), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('A', 540), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('A', 541), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('A', 542), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('A', 543), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)171, tree.rank('A', 544), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)172, tree.rank('A', 545), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)172, tree.rank('A', 546), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)172, tree.rank('A', 547), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)172, tree.rank('A', 548), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)172, tree.rank('A', 549), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)173, tree.rank('A', 550), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)174, tree.rank('A', 551), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)174, tree.rank('A', 552), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)174, tree.rank('A', 553), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)175, tree.rank('A', 554), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)175, tree.rank('A', 555), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)175, tree.rank('A', 556), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)176, tree.rank('A', 557), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)177, tree.rank('A', 558), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)177, tree.rank('A', 559), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)178, tree.rank('A', 560), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)178, tree.rank('A', 561), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)178, tree.rank('A', 562), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)179, tree.rank('A', 563), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)179, tree.rank('A', 564), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)180, tree.rank('A', 565), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)180, tree.rank('A', 566), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)180, tree.rank('A', 567), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)180, tree.rank('A', 568), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)180, tree.rank('A', 569), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)180, tree.rank('A', 570), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)180, tree.rank('A', 571), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)181, tree.rank('A', 572), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)181, tree.rank('A', 573), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)181, tree.rank('A', 574), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)181, tree.rank('A', 575), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)181, tree.rank('A', 576), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)181, tree.rank('A', 577), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)182, tree.rank('A', 578), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)183, tree.rank('A', 579), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)184, tree.rank('A', 580), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)185, tree.rank('A', 581), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)186, tree.rank('A', 582), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)187, tree.rank('A', 583), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)187, tree.rank('A', 584), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)188, tree.rank('A', 585), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('A', 586), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('A', 587), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('A', 588), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('A', 589), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)193, tree.rank('A', 590), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)193, tree.rank('A', 591), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)193, tree.rank('A', 592), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)194, tree.rank('A', 593), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)194, tree.rank('A', 594), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)194, tree.rank('A', 595), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)195, tree.rank('A', 596), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)196, tree.rank('A', 597), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)196, tree.rank('A', 598), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('A', 599), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('A', 600), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('A', 601), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)198, tree.rank('A', 602), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)198, tree.rank('A', 603), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)198, tree.rank('A', 604), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)198, tree.rank('A', 605), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)198, tree.rank('A', 606), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('A', 607), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('A', 608), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('A', 609), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('A', 610), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('A', 611), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('A', 612), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('A', 613), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('A', 614), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('A', 615), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('A', 616), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('A', 617), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('A', 618), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('A', 619), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)201, tree.rank('A', 620), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)201, tree.rank('A', 621), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)202, tree.rank('A', 622), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)202, tree.rank('A', 623), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)202, tree.rank('A', 624), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)202, tree.rank('A', 625), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)202, tree.rank('A', 626), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)202, tree.rank('A', 627), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)202, tree.rank('A', 628), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('A', 629), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('A', 630), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('A', 631), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('A', 632), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('A', 633), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('A', 634), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('A', 635), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('A', 636), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('A', 637), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)204, tree.rank('A', 638), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)204, tree.rank('A', 639), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)205, tree.rank('A', 640), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)205, tree.rank('A', 641), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)205, tree.rank('A', 642), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)206, tree.rank('A', 643), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)207, tree.rank('A', 644), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)207, tree.rank('A', 645), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)208, tree.rank('A', 646), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)208, tree.rank('A', 647), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)208, tree.rank('A', 648), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)208, tree.rank('A', 649), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)208, tree.rank('A', 650), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)209, tree.rank('A', 651), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)209, tree.rank('A', 652), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)209, tree.rank('A', 653), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)210, tree.rank('A', 654), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)211, tree.rank('A', 655), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)211, tree.rank('A', 656), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)211, tree.rank('A', 657), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)212, tree.rank('A', 658), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)212, tree.rank('A', 659), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)213, tree.rank('A', 660), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)213, tree.rank('A', 661), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)213, tree.rank('A', 662), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)213, tree.rank('A', 663), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)213, tree.rank('A', 664), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)214, tree.rank('A', 665), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)214, tree.rank('A', 666), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)214, tree.rank('A', 667), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)214, tree.rank('A', 668), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)215, tree.rank('A', 669), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)215, tree.rank('A', 670), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)215, tree.rank('A', 671), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)216, tree.rank('A', 672), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)216, tree.rank('A', 673), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)217, tree.rank('A', 674), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)217, tree.rank('A', 675), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)217, tree.rank('A', 676), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)217, tree.rank('A', 677), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)218, tree.rank('A', 678), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)218, tree.rank('A', 679), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)218, tree.rank('A', 680), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)219, tree.rank('A', 681), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)219, tree.rank('A', 682), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)220, tree.rank('A', 683), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)221, tree.rank('A', 684), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)222, tree.rank('A', 685), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)222, tree.rank('A', 686), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)223, tree.rank('A', 687), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)224, tree.rank('A', 688), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)224, tree.rank('A', 689), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)224, tree.rank('A', 690), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)225, tree.rank('A', 691), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)225, tree.rank('A', 692), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)226, tree.rank('A', 693), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)226, tree.rank('A', 694), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)227, tree.rank('A', 695), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)227, tree.rank('A', 696), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)227, tree.rank('A', 697), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)228, tree.rank('A', 698), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)228, tree.rank('A', 699), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)228, tree.rank('A', 700), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)228, tree.rank('A', 701), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)229, tree.rank('A', 702), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)229, tree.rank('A', 703), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)229, tree.rank('A', 704), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)230, tree.rank('A', 705), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)230, tree.rank('A', 706), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)231, tree.rank('A', 707), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)231, tree.rank('A', 708), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)232, tree.rank('A', 709), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)232, tree.rank('A', 710), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)232, tree.rank('A', 711), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)233, tree.rank('A', 712), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)233, tree.rank('A', 713), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)233, tree.rank('A', 714), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)234, tree.rank('A', 715), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)234, tree.rank('A', 716), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)235, tree.rank('A', 717), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 718), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 719), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 720), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 721), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 722), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 723), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 724), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 725), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 726), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)236, tree.rank('A', 727), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)237, tree.rank('A', 728), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)237, tree.rank('A', 729), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)238, tree.rank('A', 730), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)238, tree.rank('A', 731), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)238, tree.rank('A', 732), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)238, tree.rank('A', 733), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)239, tree.rank('A', 734), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)239, tree.rank('A', 735), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)239, tree.rank('A', 736), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)239, tree.rank('A', 737), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)240, tree.rank('A', 738), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)241, tree.rank('A', 739), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)242, tree.rank('A', 740), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)242, tree.rank('A', 741), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)242, tree.rank('A', 742), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)243, tree.rank('A', 743), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)243, tree.rank('A', 744), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)243, tree.rank('A', 745), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)244, tree.rank('A', 746), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)244, tree.rank('A', 747), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)244, tree.rank('A', 748), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)245, tree.rank('A', 749), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)245, tree.rank('A', 750), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)245, tree.rank('A', 751), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)246, tree.rank('A', 752), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)247, tree.rank('A', 753), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)247, tree.rank('A', 754), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)248, tree.rank('A', 755), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)248, tree.rank('A', 756), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)248, tree.rank('A', 757), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)248, tree.rank('A', 758), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)248, tree.rank('A', 759), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)249, tree.rank('A', 760), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)250, tree.rank('A', 761), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)251, tree.rank('A', 762), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)251, tree.rank('A', 763), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)251, tree.rank('A', 764), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)252, tree.rank('A', 765), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)252, tree.rank('A', 766), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)252, tree.rank('A', 767), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)253, tree.rank('A', 768), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)253, tree.rank('A', 769), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)253, tree.rank('A', 770), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)254, tree.rank('A', 771), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)254, tree.rank('A', 772), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)255, tree.rank('A', 773), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)256, tree.rank('A', 774), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)257, tree.rank('A', 775), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)258, tree.rank('A', 776), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)259, tree.rank('A', 777), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)259, tree.rank('A', 778), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)259, tree.rank('A', 779), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)259, tree.rank('A', 780), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)259, tree.rank('A', 781), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)260, tree.rank('A', 782), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)260, tree.rank('A', 783), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)261, tree.rank('A', 784), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)261, tree.rank('A', 785), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)261, tree.rank('A', 786), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)261, tree.rank('A', 787), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)261, tree.rank('A', 788), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)261, tree.rank('A', 789), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)261, tree.rank('A', 790), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)261, tree.rank('A', 791), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)262, tree.rank('A', 792), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)262, tree.rank('A', 793), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)263, tree.rank('A', 794), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)264, tree.rank('A', 795), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)265, tree.rank('A', 796), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)266, tree.rank('A', 797), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)266, tree.rank('A', 798), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)267, tree.rank('A', 799), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)268, tree.rank('A', 800), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)269, tree.rank('A', 801), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)270, tree.rank('A', 802), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)270, tree.rank('A', 803), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)270, tree.rank('A', 804), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)270, tree.rank('A', 805), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)271, tree.rank('A', 806), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)271, tree.rank('A', 807), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)272, tree.rank('A', 808), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)272, tree.rank('A', 809), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)273, tree.rank('A', 810), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)273, tree.rank('A', 811), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)274, tree.rank('A', 812), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)274, tree.rank('A', 813), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)274, tree.rank('A', 814), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)274, tree.rank('A', 815), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)275, tree.rank('A', 816), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)275, tree.rank('A', 817), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)275, tree.rank('A', 818), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)275, tree.rank('A', 819), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)276, tree.rank('A', 820), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)276, tree.rank('A', 821), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)276, tree.rank('A', 822), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)277, tree.rank('A', 823), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)278, tree.rank('A', 824), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)278, tree.rank('A', 825), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)279, tree.rank('A', 826), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)279, tree.rank('A', 827), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)280, tree.rank('A', 828), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)280, tree.rank('A', 829), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)280, tree.rank('A', 830), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)280, tree.rank('A', 831), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)281, tree.rank('A', 832), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)281, tree.rank('A', 833), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)281, tree.rank('A', 834), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)282, tree.rank('A', 835), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)282, tree.rank('A', 836), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)282, tree.rank('A', 837), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)282, tree.rank('A', 838), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)282, tree.rank('A', 839), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)282, tree.rank('A', 840), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)283, tree.rank('A', 841), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)283, tree.rank('A', 842), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)283, tree.rank('A', 843), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)283, tree.rank('A', 844), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)284, tree.rank('A', 845), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)284, tree.rank('A', 846), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)284, tree.rank('A', 847), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)285, tree.rank('A', 848), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)285, tree.rank('A', 849), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)285, tree.rank('A', 850), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)285, tree.rank('A', 851), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)285, tree.rank('A', 852), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)286, tree.rank('A', 853), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)286, tree.rank('A', 854), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)286, tree.rank('A', 855), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)286, tree.rank('A', 856), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)287, tree.rank('A', 857), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)287, tree.rank('A', 858), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)288, tree.rank('A', 859), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)289, tree.rank('A', 860), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)290, tree.rank('A', 861), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)290, tree.rank('A', 862), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)291, tree.rank('A', 863), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)291, tree.rank('A', 864), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)291, tree.rank('A', 865), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)291, tree.rank('A', 866), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)291, tree.rank('A', 867), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)292, tree.rank('A', 868), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)292, tree.rank('A', 869), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)292, tree.rank('A', 870), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)293, tree.rank('A', 871), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)293, tree.rank('A', 872), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)294, tree.rank('A', 873), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)294, tree.rank('A', 874), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)295, tree.rank('A', 875), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)296, tree.rank('A', 876), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)296, tree.rank('A', 877), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)297, tree.rank('A', 878), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)298, tree.rank('A', 879), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)299, tree.rank('A', 880), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)300, tree.rank('A', 881), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)301, tree.rank('A', 882), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)301, tree.rank('A', 883), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)302, tree.rank('A', 884), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)302, tree.rank('A', 885), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)303, tree.rank('A', 886), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)303, tree.rank('A', 887), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)303, tree.rank('A', 888), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)304, tree.rank('A', 889), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)304, tree.rank('A', 890), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)304, tree.rank('A', 891), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)304, tree.rank('A', 892), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)304, tree.rank('A', 893), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)305, tree.rank('A', 894), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)305, tree.rank('A', 895), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)306, tree.rank('A', 896), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)306, tree.rank('A', 897), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)307, tree.rank('A', 898), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)308, tree.rank('A', 899), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)308, tree.rank('A', 900), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)309, tree.rank('A', 901), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)309, tree.rank('A', 902), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)309, tree.rank('A', 903), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)309, tree.rank('A', 904), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)309, tree.rank('A', 905), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)309, tree.rank('A', 906), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)309, tree.rank('A', 907), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)309, tree.rank('A', 908), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)310, tree.rank('A', 909), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)310, tree.rank('A', 910), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)310, tree.rank('A', 911), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)310, tree.rank('A', 912), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)310, tree.rank('A', 913), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)310, tree.rank('A', 914), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)310, tree.rank('A', 915), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)310, tree.rank('A', 916), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)311, tree.rank('A', 917), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)311, tree.rank('A', 918), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)311, tree.rank('A', 919), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)311, tree.rank('A', 920), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)312, tree.rank('A', 921), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)312, tree.rank('A', 922), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)312, tree.rank('A', 923), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)313, tree.rank('A', 924), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)313, tree.rank('A', 925), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)314, tree.rank('A', 926), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)314, tree.rank('A', 927), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)314, tree.rank('A', 928), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)315, tree.rank('A', 929), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)315, tree.rank('A', 930), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)316, tree.rank('A', 931), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)316, tree.rank('A', 932), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)317, tree.rank('A', 933), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)318, tree.rank('A', 934), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)319, tree.rank('A', 935), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)320, tree.rank('A', 936), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)321, tree.rank('A', 937), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)322, tree.rank('A', 938), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)322, tree.rank('A', 939), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)323, tree.rank('A', 940), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)323, tree.rank('A', 941), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)323, tree.rank('A', 942), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)324, tree.rank('A', 943), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)324, tree.rank('A', 944), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)325, tree.rank('A', 945), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)326, tree.rank('A', 946), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)327, tree.rank('A', 947), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)327, tree.rank('A', 948), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)328, tree.rank('A', 949), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)329, tree.rank('A', 950), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)329, tree.rank('A', 951), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)329, tree.rank('A', 952), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)329, tree.rank('A', 953), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)329, tree.rank('A', 954), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)329, tree.rank('A', 955), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 956), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 957), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 958), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 959), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 960), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 961), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 962), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 963), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 964), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)330, tree.rank('A', 965), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)331, tree.rank('A', 966), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)331, tree.rank('A', 967), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)331, tree.rank('A', 968), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)331, tree.rank('A', 969), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)331, tree.rank('A', 970), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)331, tree.rank('A', 971), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)331, tree.rank('A', 972), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)332, tree.rank('A', 973), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)332, tree.rank('A', 974), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)332, tree.rank('A', 975), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)333, tree.rank('A', 976), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)334, tree.rank('A', 977), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)334, tree.rank('A', 978), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)334, tree.rank('A', 979), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)334, tree.rank('A', 980), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)334, tree.rank('A', 981), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)335, tree.rank('A', 982), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)335, tree.rank('A', 983), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)335, tree.rank('A', 984), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)335, tree.rank('A', 985), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)335, tree.rank('A', 986), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)335, tree.rank('A', 987), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)336, tree.rank('A', 988), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)336, tree.rank('A', 989), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)337, tree.rank('A', 990), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)338, tree.rank('A', 991), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)339, tree.rank('A', 992), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)339, tree.rank('A', 993), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)339, tree.rank('A', 994), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)339, tree.rank('A', 995), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)340, tree.rank('A', 996), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)340, tree.rank('A', 997), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)341, tree.rank('A', 998), L"Wavelet tree rank test", LINE_INFO());


			// T
			Assert::AreEqual((uint64_t)0, tree.rank('T', 0), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)0, tree.rank('T', 1), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('T', 2), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)1, tree.rank('T', 3), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)2, tree.rank('T', 4), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)3, tree.rank('T', 5), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 6), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 7), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 8), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 9), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 10), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 11), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 12), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 13), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 14), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 15), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 16), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 17), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)4, tree.rank('T', 18), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)5, tree.rank('T', 19), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)5, tree.rank('T', 20), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)5, tree.rank('T', 21), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)6, tree.rank('T', 22), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)6, tree.rank('T', 23), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)6, tree.rank('T', 24), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)6, tree.rank('T', 25), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)6, tree.rank('T', 26), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)6, tree.rank('T', 27), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)7, tree.rank('T', 28), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)7, tree.rank('T', 29), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)7, tree.rank('T', 30), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)7, tree.rank('T', 31), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)7, tree.rank('T', 32), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)7, tree.rank('T', 33), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 34), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 35), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 36), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 37), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 38), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 39), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 40), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 41), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 42), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 43), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 44), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)8, tree.rank('T', 45), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 46), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 47), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 48), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 49), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 50), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 51), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 52), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 53), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 54), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)9, tree.rank('T', 55), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)10, tree.rank('T', 56), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)10, tree.rank('T', 57), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)11, tree.rank('T', 58), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)11, tree.rank('T', 59), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)12, tree.rank('T', 60), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)13, tree.rank('T', 61), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)13, tree.rank('T', 62), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)13, tree.rank('T', 63), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)13, tree.rank('T', 64), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 65), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 66), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 67), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 68), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 69), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 70), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 71), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 72), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 73), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 74), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 75), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)14, tree.rank('T', 76), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)15, tree.rank('T', 77), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)15, tree.rank('T', 78), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)15, tree.rank('T', 79), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)16, tree.rank('T', 80), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)16, tree.rank('T', 81), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)16, tree.rank('T', 82), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)16, tree.rank('T', 83), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)16, tree.rank('T', 84), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)17, tree.rank('T', 85), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)17, tree.rank('T', 86), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)18, tree.rank('T', 87), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('T', 88), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('T', 89), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('T', 90), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('T', 91), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('T', 92), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('T', 93), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('T', 94), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('T', 95), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)19, tree.rank('T', 96), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)20, tree.rank('T', 97), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)20, tree.rank('T', 98), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)20, tree.rank('T', 99), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)20, tree.rank('T', 100), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)21, tree.rank('T', 101), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)22, tree.rank('T', 102), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 103), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 104), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 105), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 106), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 107), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 108), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 109), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 110), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 111), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 112), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)23, tree.rank('T', 113), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 114), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 115), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 116), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 117), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 118), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 119), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 120), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 121), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 122), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 123), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 124), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 125), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)24, tree.rank('T', 126), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)25, tree.rank('T', 127), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)25, tree.rank('T', 128), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)25, tree.rank('T', 129), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('T', 130), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('T', 131), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('T', 132), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('T', 133), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('T', 134), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('T', 135), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('T', 136), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('T', 137), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)26, tree.rank('T', 138), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)27, tree.rank('T', 139), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)28, tree.rank('T', 140), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)28, tree.rank('T', 141), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)28, tree.rank('T', 142), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)28, tree.rank('T', 143), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)28, tree.rank('T', 144), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)28, tree.rank('T', 145), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)29, tree.rank('T', 146), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)30, tree.rank('T', 147), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)31, tree.rank('T', 148), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)32, tree.rank('T', 149), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)32, tree.rank('T', 150), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)33, tree.rank('T', 151), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)33, tree.rank('T', 152), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)33, tree.rank('T', 153), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)33, tree.rank('T', 154), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)33, tree.rank('T', 155), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)33, tree.rank('T', 156), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('T', 157), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('T', 158), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('T', 159), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('T', 160), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('T', 161), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('T', 162), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('T', 163), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)34, tree.rank('T', 164), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)35, tree.rank('T', 165), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)35, tree.rank('T', 166), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)36, tree.rank('T', 167), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)36, tree.rank('T', 168), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)36, tree.rank('T', 169), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)37, tree.rank('T', 170), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)37, tree.rank('T', 171), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)37, tree.rank('T', 172), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)37, tree.rank('T', 173), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)37, tree.rank('T', 174), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('T', 175), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('T', 176), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)38, tree.rank('T', 177), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)39, tree.rank('T', 178), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)39, tree.rank('T', 179), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)39, tree.rank('T', 180), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)40, tree.rank('T', 181), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)40, tree.rank('T', 182), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)40, tree.rank('T', 183), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)40, tree.rank('T', 184), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)40, tree.rank('T', 185), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)40, tree.rank('T', 186), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)41, tree.rank('T', 187), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)41, tree.rank('T', 188), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)42, tree.rank('T', 189), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)42, tree.rank('T', 190), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)43, tree.rank('T', 191), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)43, tree.rank('T', 192), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)43, tree.rank('T', 193), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)43, tree.rank('T', 194), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)43, tree.rank('T', 195), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)43, tree.rank('T', 196), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)44, tree.rank('T', 197), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)44, tree.rank('T', 198), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)44, tree.rank('T', 199), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)44, tree.rank('T', 200), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)44, tree.rank('T', 201), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)44, tree.rank('T', 202), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)45, tree.rank('T', 203), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)45, tree.rank('T', 204), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)46, tree.rank('T', 205), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)46, tree.rank('T', 206), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)46, tree.rank('T', 207), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)46, tree.rank('T', 208), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)47, tree.rank('T', 209), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)47, tree.rank('T', 210), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)47, tree.rank('T', 211), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)47, tree.rank('T', 212), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)47, tree.rank('T', 213), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)48, tree.rank('T', 214), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)48, tree.rank('T', 215), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)49, tree.rank('T', 216), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)50, tree.rank('T', 217), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)50, tree.rank('T', 218), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)50, tree.rank('T', 219), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)51, tree.rank('T', 220), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)51, tree.rank('T', 221), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)51, tree.rank('T', 222), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)51, tree.rank('T', 223), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)51, tree.rank('T', 224), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)51, tree.rank('T', 225), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)51, tree.rank('T', 226), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('T', 227), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('T', 228), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('T', 229), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('T', 230), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('T', 231), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)52, tree.rank('T', 232), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)53, tree.rank('T', 233), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)53, tree.rank('T', 234), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('T', 235), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('T', 236), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('T', 237), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('T', 238), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('T', 239), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)54, tree.rank('T', 240), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('T', 241), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('T', 242), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)55, tree.rank('T', 243), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)56, tree.rank('T', 244), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('T', 245), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('T', 246), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('T', 247), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('T', 248), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('T', 249), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('T', 250), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('T', 251), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('T', 252), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)57, tree.rank('T', 253), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)58, tree.rank('T', 254), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)58, tree.rank('T', 255), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)59, tree.rank('T', 256), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)59, tree.rank('T', 257), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)60, tree.rank('T', 258), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)61, tree.rank('T', 259), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)61, tree.rank('T', 260), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)61, tree.rank('T', 261), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)61, tree.rank('T', 262), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)62, tree.rank('T', 263), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)62, tree.rank('T', 264), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)62, tree.rank('T', 265), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)62, tree.rank('T', 266), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)62, tree.rank('T', 267), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)63, tree.rank('T', 268), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)64, tree.rank('T', 269), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)64, tree.rank('T', 270), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)64, tree.rank('T', 271), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)65, tree.rank('T', 272), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)66, tree.rank('T', 273), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)66, tree.rank('T', 274), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)66, tree.rank('T', 275), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)66, tree.rank('T', 276), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)66, tree.rank('T', 277), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)67, tree.rank('T', 278), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)68, tree.rank('T', 279), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)69, tree.rank('T', 280), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)69, tree.rank('T', 281), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)69, tree.rank('T', 282), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)69, tree.rank('T', 283), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)70, tree.rank('T', 284), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)71, tree.rank('T', 285), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)72, tree.rank('T', 286), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 287), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 288), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 289), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 290), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 291), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 292), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 293), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 294), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 295), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 296), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 297), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 298), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 299), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 300), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 301), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 302), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 303), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 304), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 305), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 306), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 307), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 308), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 309), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 310), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 311), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 312), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 313), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 314), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 315), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 316), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 317), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 318), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 319), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 320), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 321), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 322), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 323), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 324), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 325), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 326), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 327), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 328), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 329), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 330), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 331), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 332), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 333), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 334), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 335), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 336), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 337), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 338), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 339), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 340), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 341), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 342), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 343), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 344), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 345), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 346), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 347), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 348), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 349), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 350), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 351), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 352), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 353), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 354), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 355), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 356), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 357), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 358), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 359), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 360), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 361), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 362), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 363), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 364), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 365), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 366), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 367), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 368), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 369), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 370), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 371), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 372), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 373), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 374), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 375), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 376), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 377), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 378), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 379), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 380), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 381), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 382), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 383), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 384), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 385), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 386), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 387), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 388), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 389), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 390), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 391), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 392), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 393), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 394), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 395), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 396), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 397), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 398), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)73, tree.rank('T', 399), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 400), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 401), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 402), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 403), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 404), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 405), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 406), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 407), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 408), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 409), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 410), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 411), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 412), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 413), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 414), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 415), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 416), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)74, tree.rank('T', 417), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)75, tree.rank('T', 418), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)76, tree.rank('T', 419), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)77, tree.rank('T', 420), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)77, tree.rank('T', 421), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)77, tree.rank('T', 422), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)77, tree.rank('T', 423), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)77, tree.rank('T', 424), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)77, tree.rank('T', 425), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)77, tree.rank('T', 426), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)78, tree.rank('T', 427), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)79, tree.rank('T', 428), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)79, tree.rank('T', 429), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)79, tree.rank('T', 430), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)79, tree.rank('T', 431), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)79, tree.rank('T', 432), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)79, tree.rank('T', 433), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('T', 434), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('T', 435), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('T', 436), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('T', 437), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('T', 438), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)80, tree.rank('T', 439), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)81, tree.rank('T', 440), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)81, tree.rank('T', 441), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)81, tree.rank('T', 442), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)81, tree.rank('T', 443), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)82, tree.rank('T', 444), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)82, tree.rank('T', 445), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)82, tree.rank('T', 446), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)82, tree.rank('T', 447), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)82, tree.rank('T', 448), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)83, tree.rank('T', 449), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)83, tree.rank('T', 450), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)83, tree.rank('T', 451), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)84, tree.rank('T', 452), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)84, tree.rank('T', 453), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)84, tree.rank('T', 454), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)84, tree.rank('T', 455), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)84, tree.rank('T', 456), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)85, tree.rank('T', 457), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)85, tree.rank('T', 458), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)86, tree.rank('T', 459), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)87, tree.rank('T', 460), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('T', 461), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('T', 462), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('T', 463), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('T', 464), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)88, tree.rank('T', 465), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 466), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 467), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 468), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 469), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 470), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 471), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 472), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 473), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 474), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 475), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 476), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 477), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 478), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 479), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 480), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)89, tree.rank('T', 481), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)90, tree.rank('T', 482), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)90, tree.rank('T', 483), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)90, tree.rank('T', 484), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)91, tree.rank('T', 485), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)91, tree.rank('T', 486), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)91, tree.rank('T', 487), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)91, tree.rank('T', 488), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('T', 489), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('T', 490), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('T', 491), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('T', 492), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('T', 493), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('T', 494), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('T', 495), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('T', 496), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)92, tree.rank('T', 497), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)93, tree.rank('T', 498), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)94, tree.rank('T', 499), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)94, tree.rank('T', 500), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)94, tree.rank('T', 501), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)95, tree.rank('T', 502), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)95, tree.rank('T', 503), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)95, tree.rank('T', 504), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)95, tree.rank('T', 505), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)96, tree.rank('T', 506), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)97, tree.rank('T', 507), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('T', 508), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('T', 509), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('T', 510), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('T', 511), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('T', 512), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('T', 513), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('T', 514), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('T', 515), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)98, tree.rank('T', 516), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)99, tree.rank('T', 517), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)100, tree.rank('T', 518), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)100, tree.rank('T', 519), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)100, tree.rank('T', 520), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('T', 521), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('T', 522), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('T', 523), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('T', 524), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('T', 525), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('T', 526), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('T', 527), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('T', 528), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)101, tree.rank('T', 529), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('T', 530), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('T', 531), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('T', 532), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('T', 533), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('T', 534), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('T', 535), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)102, tree.rank('T', 536), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)103, tree.rank('T', 537), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)104, tree.rank('T', 538), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)104, tree.rank('T', 539), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('T', 540), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('T', 541), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('T', 542), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('T', 543), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('T', 544), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('T', 545), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)105, tree.rank('T', 546), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)106, tree.rank('T', 547), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)107, tree.rank('T', 548), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)107, tree.rank('T', 549), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)107, tree.rank('T', 550), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)107, tree.rank('T', 551), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)108, tree.rank('T', 552), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)109, tree.rank('T', 553), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)109, tree.rank('T', 554), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)109, tree.rank('T', 555), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)109, tree.rank('T', 556), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)109, tree.rank('T', 557), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)109, tree.rank('T', 558), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('T', 559), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('T', 560), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('T', 561), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('T', 562), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('T', 563), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('T', 564), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)110, tree.rank('T', 565), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 566), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 567), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 568), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 569), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 570), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 571), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 572), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 573), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 574), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)111, tree.rank('T', 575), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)112, tree.rank('T', 576), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 577), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 578), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 579), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 580), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 581), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 582), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 583), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 584), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 585), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 586), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 587), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 588), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 589), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)113, tree.rank('T', 590), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)114, tree.rank('T', 591), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)114, tree.rank('T', 592), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)114, tree.rank('T', 593), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)114, tree.rank('T', 594), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)115, tree.rank('T', 595), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)115, tree.rank('T', 596), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)115, tree.rank('T', 597), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)115, tree.rank('T', 598), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)115, tree.rank('T', 599), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)115, tree.rank('T', 600), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)116, tree.rank('T', 601), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)116, tree.rank('T', 602), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)116, tree.rank('T', 603), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)117, tree.rank('T', 604), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)117, tree.rank('T', 605), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)117, tree.rank('T', 606), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)117, tree.rank('T', 607), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)118, tree.rank('T', 608), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)118, tree.rank('T', 609), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)119, tree.rank('T', 610), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)119, tree.rank('T', 611), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)119, tree.rank('T', 612), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)119, tree.rank('T', 613), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)120, tree.rank('T', 614), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)120, tree.rank('T', 615), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)120, tree.rank('T', 616), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('T', 617), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('T', 618), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('T', 619), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)121, tree.rank('T', 620), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)122, tree.rank('T', 621), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)122, tree.rank('T', 622), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)123, tree.rank('T', 623), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)124, tree.rank('T', 624), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)125, tree.rank('T', 625), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)126, tree.rank('T', 626), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)127, tree.rank('T', 627), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)127, tree.rank('T', 628), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)127, tree.rank('T', 629), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)127, tree.rank('T', 630), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)128, tree.rank('T', 631), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)129, tree.rank('T', 632), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)129, tree.rank('T', 633), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)129, tree.rank('T', 634), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)129, tree.rank('T', 635), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)130, tree.rank('T', 636), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)131, tree.rank('T', 637), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)131, tree.rank('T', 638), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)131, tree.rank('T', 639), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)131, tree.rank('T', 640), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('T', 641), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('T', 642), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('T', 643), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('T', 644), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('T', 645), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('T', 646), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)132, tree.rank('T', 647), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)133, tree.rank('T', 648), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)134, tree.rank('T', 649), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)134, tree.rank('T', 650), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)134, tree.rank('T', 651), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)134, tree.rank('T', 652), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)134, tree.rank('T', 653), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)134, tree.rank('T', 654), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)134, tree.rank('T', 655), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)134, tree.rank('T', 656), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)135, tree.rank('T', 657), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)135, tree.rank('T', 658), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)136, tree.rank('T', 659), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)136, tree.rank('T', 660), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)136, tree.rank('T', 661), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)137, tree.rank('T', 662), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)137, tree.rank('T', 663), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)137, tree.rank('T', 664), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)137, tree.rank('T', 665), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)138, tree.rank('T', 666), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)139, tree.rank('T', 667), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)140, tree.rank('T', 668), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)140, tree.rank('T', 669), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)140, tree.rank('T', 670), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)140, tree.rank('T', 671), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)140, tree.rank('T', 672), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)141, tree.rank('T', 673), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)141, tree.rank('T', 674), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)141, tree.rank('T', 675), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)141, tree.rank('T', 676), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)142, tree.rank('T', 677), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)142, tree.rank('T', 678), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)142, tree.rank('T', 679), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)143, tree.rank('T', 680), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)143, tree.rank('T', 681), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('T', 682), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('T', 683), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('T', 684), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('T', 685), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('T', 686), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('T', 687), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)144, tree.rank('T', 688), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 689), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 690), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 691), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 692), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 693), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 694), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 695), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 696), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 697), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 698), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 699), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 700), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 701), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)145, tree.rank('T', 702), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)146, tree.rank('T', 703), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)147, tree.rank('T', 704), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)147, tree.rank('T', 705), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)147, tree.rank('T', 706), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)147, tree.rank('T', 707), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)148, tree.rank('T', 708), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)148, tree.rank('T', 709), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)149, tree.rank('T', 710), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)149, tree.rank('T', 711), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)149, tree.rank('T', 712), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)149, tree.rank('T', 713), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)150, tree.rank('T', 714), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)150, tree.rank('T', 715), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)150, tree.rank('T', 716), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)150, tree.rank('T', 717), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)150, tree.rank('T', 718), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)151, tree.rank('T', 719), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)151, tree.rank('T', 720), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)152, tree.rank('T', 721), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)152, tree.rank('T', 722), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)152, tree.rank('T', 723), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)153, tree.rank('T', 724), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 725), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 726), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 727), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 728), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 729), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 730), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 731), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 732), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 733), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)154, tree.rank('T', 734), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('T', 735), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('T', 736), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('T', 737), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('T', 738), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('T', 739), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('T', 740), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('T', 741), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('T', 742), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)155, tree.rank('T', 743), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 744), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 745), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 746), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 747), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 748), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 749), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 750), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 751), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 752), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)156, tree.rank('T', 753), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)157, tree.rank('T', 754), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)157, tree.rank('T', 755), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)158, tree.rank('T', 756), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)159, tree.rank('T', 757), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)159, tree.rank('T', 758), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)159, tree.rank('T', 759), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)159, tree.rank('T', 760), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)159, tree.rank('T', 761), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)159, tree.rank('T', 762), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)159, tree.rank('T', 763), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)160, tree.rank('T', 764), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)160, tree.rank('T', 765), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)160, tree.rank('T', 766), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)160, tree.rank('T', 767), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)160, tree.rank('T', 768), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('T', 769), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('T', 770), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('T', 771), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('T', 772), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('T', 773), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('T', 774), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('T', 775), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('T', 776), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)161, tree.rank('T', 777), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)162, tree.rank('T', 778), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)162, tree.rank('T', 779), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)163, tree.rank('T', 780), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)164, tree.rank('T', 781), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)164, tree.rank('T', 782), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)164, tree.rank('T', 783), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)164, tree.rank('T', 784), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)164, tree.rank('T', 785), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)164, tree.rank('T', 786), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)164, tree.rank('T', 787), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)165, tree.rank('T', 788), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)166, tree.rank('T', 789), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)167, tree.rank('T', 790), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 791), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 792), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 793), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 794), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 795), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 796), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 797), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 798), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 799), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 800), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 801), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)168, tree.rank('T', 802), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('T', 803), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('T', 804), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('T', 805), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('T', 806), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('T', 807), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('T', 808), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('T', 809), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)169, tree.rank('T', 810), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('T', 811), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('T', 812), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)170, tree.rank('T', 813), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)171, tree.rank('T', 814), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)172, tree.rank('T', 815), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)172, tree.rank('T', 816), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)173, tree.rank('T', 817), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)173, tree.rank('T', 818), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)174, tree.rank('T', 819), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)174, tree.rank('T', 820), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)175, tree.rank('T', 821), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)175, tree.rank('T', 822), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)175, tree.rank('T', 823), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)175, tree.rank('T', 824), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)176, tree.rank('T', 825), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)176, tree.rank('T', 826), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)176, tree.rank('T', 827), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)176, tree.rank('T', 828), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)177, tree.rank('T', 829), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)177, tree.rank('T', 830), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)177, tree.rank('T', 831), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)177, tree.rank('T', 832), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)178, tree.rank('T', 833), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)178, tree.rank('T', 834), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)178, tree.rank('T', 835), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)179, tree.rank('T', 836), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)180, tree.rank('T', 837), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)181, tree.rank('T', 838), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)181, tree.rank('T', 839), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)182, tree.rank('T', 840), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)182, tree.rank('T', 841), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)183, tree.rank('T', 842), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)183, tree.rank('T', 843), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)184, tree.rank('T', 844), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)184, tree.rank('T', 845), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)184, tree.rank('T', 846), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)184, tree.rank('T', 847), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)184, tree.rank('T', 848), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)185, tree.rank('T', 849), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)185, tree.rank('T', 850), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)186, tree.rank('T', 851), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)186, tree.rank('T', 852), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)186, tree.rank('T', 853), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)186, tree.rank('T', 854), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)187, tree.rank('T', 855), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)188, tree.rank('T', 856), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)188, tree.rank('T', 857), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)188, tree.rank('T', 858), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)188, tree.rank('T', 859), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)188, tree.rank('T', 860), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)188, tree.rank('T', 861), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 862), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 863), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 864), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 865), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 866), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 867), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 868), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 869), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 870), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)189, tree.rank('T', 871), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 872), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 873), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 874), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 875), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 876), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 877), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 878), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 879), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 880), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 881), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)190, tree.rank('T', 882), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('T', 883), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('T', 884), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('T', 885), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('T', 886), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('T', 887), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('T', 888), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('T', 889), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('T', 890), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)191, tree.rank('T', 891), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 892), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 893), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 894), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 895), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 896), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 897), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 898), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 899), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 900), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)192, tree.rank('T', 901), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)193, tree.rank('T', 902), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)193, tree.rank('T', 903), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)194, tree.rank('T', 904), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)194, tree.rank('T', 905), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)195, tree.rank('T', 906), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)196, tree.rank('T', 907), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)196, tree.rank('T', 908), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)196, tree.rank('T', 909), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)196, tree.rank('T', 910), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)196, tree.rank('T', 911), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('T', 912), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('T', 913), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('T', 914), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('T', 915), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('T', 916), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('T', 917), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)197, tree.rank('T', 918), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)198, tree.rank('T', 919), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 920), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 921), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 922), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 923), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 924), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 925), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 926), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 927), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 928), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 929), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 930), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 931), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 932), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 933), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 934), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 935), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 936), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 937), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 938), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 939), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)199, tree.rank('T', 940), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 941), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 942), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 943), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 944), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 945), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 946), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 947), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 948), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 949), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 950), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 951), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)200, tree.rank('T', 952), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)201, tree.rank('T', 953), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)201, tree.rank('T', 954), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)201, tree.rank('T', 955), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)201, tree.rank('T', 956), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)202, tree.rank('T', 957), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('T', 958), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('T', 959), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)203, tree.rank('T', 960), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)204, tree.rank('T', 961), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)205, tree.rank('T', 962), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)206, tree.rank('T', 963), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)206, tree.rank('T', 964), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)206, tree.rank('T', 965), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)206, tree.rank('T', 966), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)207, tree.rank('T', 967), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)207, tree.rank('T', 968), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)207, tree.rank('T', 969), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)207, tree.rank('T', 970), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)208, tree.rank('T', 971), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)209, tree.rank('T', 972), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)209, tree.rank('T', 973), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)210, tree.rank('T', 974), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)210, tree.rank('T', 975), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)210, tree.rank('T', 976), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)210, tree.rank('T', 977), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)210, tree.rank('T', 978), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)211, tree.rank('T', 979), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)211, tree.rank('T', 980), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)211, tree.rank('T', 981), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)211, tree.rank('T', 982), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)212, tree.rank('T', 983), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)212, tree.rank('T', 984), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)212, tree.rank('T', 985), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)213, tree.rank('T', 986), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)213, tree.rank('T', 987), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)213, tree.rank('T', 988), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)214, tree.rank('T', 989), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)214, tree.rank('T', 990), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)214, tree.rank('T', 991), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)214, tree.rank('T', 992), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)215, tree.rank('T', 993), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)215, tree.rank('T', 994), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)215, tree.rank('T', 995), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)215, tree.rank('T', 996), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)215, tree.rank('T', 997), L"Wavelet tree rank test", LINE_INFO());
			Assert::AreEqual((uint64_t)215, tree.rank('T', 998), L"Wavelet tree rank test", LINE_INFO());

		}

	};
}